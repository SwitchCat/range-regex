<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Range.php" path="/">
    <totals>
      <lines total="38" comments="6" code="32" executable="7" executed="7" percent="100.00"/>
      <methods count="3" tested="3" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="SwitchCat\RangeRegex\Range" start="7" executable="7" executed="7" crap="4">
      <namespace name="SwitchCat\RangeRegex"/>
      <method name="__construct" signature="__construct(int $min, int $max)" start="19" end="27" crap="2" executable="5" executed="5" coverage="100"/>
      <method name="getMin" signature="getMin(): int" start="29" end="32" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getMax" signature="getMax(): int" start="34" end="37" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="21">
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToArrayReturnsStringWithCorrectParams"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToArrayThrowsExceptionWithIncorrectParams_minHigherThanMax"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToRegexReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToRegexMinEqualsMaxReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterCachedTest::testGetKeyReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterCachedTest::testToRegexReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\RangeTest::testRangeParamsAreInteger"/>
        <covered by="SwitchCat\RangeRegex\Tests\RangeTest::testRangeThrowsExceptionWithInvalidParameters_minHigherThanMax"/>
        <covered by="SwitchCat\RangeRegex\Tests\RangeTest::testRangeParamsAreSet"/>
      </line>
      <line nr="23">
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToArrayThrowsExceptionWithIncorrectParams_minHigherThanMax"/>
        <covered by="SwitchCat\RangeRegex\Tests\RangeTest::testRangeThrowsExceptionWithInvalidParameters_minHigherThanMax"/>
      </line>
      <line nr="25">
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToArrayReturnsStringWithCorrectParams"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToRegexReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToRegexMinEqualsMaxReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterCachedTest::testGetKeyReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterCachedTest::testToRegexReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\RangeTest::testRangeParamsAreInteger"/>
        <covered by="SwitchCat\RangeRegex\Tests\RangeTest::testRangeParamsAreSet"/>
      </line>
      <line nr="26">
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToArrayReturnsStringWithCorrectParams"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToRegexReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToRegexMinEqualsMaxReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterCachedTest::testGetKeyReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterCachedTest::testToRegexReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\RangeTest::testRangeParamsAreInteger"/>
        <covered by="SwitchCat\RangeRegex\Tests\RangeTest::testRangeParamsAreSet"/>
      </line>
      <line nr="27">
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToArrayReturnsStringWithCorrectParams"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToRegexReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToRegexMinEqualsMaxReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterCachedTest::testGetKeyReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterCachedTest::testToRegexReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\RangeTest::testRangeParamsAreInteger"/>
        <covered by="SwitchCat\RangeRegex\Tests\RangeTest::testRangeParamsAreSet"/>
      </line>
      <line nr="31">
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToArrayReturnsStringWithCorrectParams"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToRegexReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToRegexMinEqualsMaxReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterCachedTest::testGetKeyReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterCachedTest::testToRegexReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\RangeTest::testRangeParamsAreInteger"/>
      </line>
      <line nr="36">
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToArrayReturnsStringWithCorrectParams"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToRegexReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterDefaultTest::testToRegexMinEqualsMaxReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterCachedTest::testGetKeyReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\ConverterCachedTest::testToRegexReturnsString"/>
        <covered by="SwitchCat\RangeRegex\Tests\RangeTest::testRangeParamsAreInteger"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SwitchCat</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">RangeRegex</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_FINAL">final</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Range</token>
      </line>
      <line no="8">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="9">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10"/>
      <line no="11">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT">     * Range constructor.</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT">     * @param int $min</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     * @param int $max</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">        </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Parameter 1 has to be smaller or equal to parameter 2'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">min</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">max</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getMin</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_STRING">int</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">min</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="33"/>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getMax</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_STRING">int</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">max</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="38">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="39"/>
    </source>
  </file>
</phpunit>
